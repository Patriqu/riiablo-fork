buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://plugins.gradle.org/m2/" }
    gradlePluginPortal()
    google()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:$androidBuildToolsPluginVersion"
    classpath "gradle.plugin.io.netifi:gradle-flatbuffers-plugin:$flatbuffersPluginVersion"

    constraints {
      classpath("org.apache.logging.log4j:log4j-core") {
        version {
          strictly("[2.17, 3[")
          prefer("2.17.0")
        }
        because("CVE-2021-44228: Log4j vulnerable to remote code execution")
      }
    }
  }

  dependencies {
    // lib for artemis-odb weaving.
    // see https://github.com/junkdog/artemis-odb/wiki/Bytecode-weaving
    classpath "net.onedaybeard.artemis:artemis-odb-gradle-plugin:$artemisOdbVersion"

    // lib for artemis-odb fluid.
    // classpath "net.onedaybeard.artemis:artemis-fluid-gradle-plugin:$artemisOdbVersion"
  }
}

allprojects {
  apply plugin: 'idea'

  version = '0.0.5-SNAPSHOT'
  ext.appName = 'riiablo'

  repositories {
    mavenLocal()
    mavenCentral()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { url 'https://jitpack.io' }
  }
}

configure(subprojects - project(':android')) {
  apply plugin: 'java-library'
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
  compileJava {
    options.incremental = true
  }
}

// generates sources when creating IDEA project files
tasks.idea.dependsOn 'core:generateSources'

task release(type: Copy) {
  doFirst {
    delete "$buildDir/release"
  }

  dependsOn ':desktop:jar'
  from project(':desktop').tasks.getByName('jar').outputs.files

  dependsOn ':tools:mpq-viewer:jar'
  from project(':tools:mpq-viewer').tasks.getByName('jar').outputs.files

  dependsOn ':tools:map-viewer:jar'
  from project(':tools:map-viewer').tasks.getByName('jar').outputs.files

  into "$buildDir/release"
  rename '(.*)-SNAPSHOT(.*)', '$1$2'
}
